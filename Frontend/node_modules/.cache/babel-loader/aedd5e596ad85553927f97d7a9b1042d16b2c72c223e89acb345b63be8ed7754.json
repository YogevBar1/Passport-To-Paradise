{"ast":null,"code":"var _jsxFileName = \"C:\\\\John Bryce Programing\\\\Passport To Paradise\\\\Frontend\\\\src\\\\Components\\\\AuthArea\\\\Register\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport \"./Register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyService\";\n\n/**\n * The `Register` component is responsible for rendering a registration form.\n * Users can enter their first name, last name, email, and password to register for an account.\n * Upon successful registration, users are redirected to the \"/vacations\" page.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const navigate = useNavigate();\n  async function send(user) {\n    try {\n      await authService.register(user);\n      notifyService.success(\"You have been successfully registered.\");\n      navigate(\"/vacations\");\n    } catch (err) {\n      notifyService.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"firstName\"),\n        min: 2,\n        max: 30,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"lastName\"),\n        min: 2,\n        max: 30,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        ...register(\"email\"),\n        min: 4,\n        max: 60,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\"),\n        min: 4,\n        max: 150 //Intentionally the limit here on the number of characters is smaller than the limit of characters in the database because I take into account the hashing\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"NBNaF86L+s24OCdlX7l2VwDp8PU=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useForm","useNavigate","authService","notifyService","jsxDEV","_jsxDEV","Register","_s","register","handleSubmit","navigate","send","user","success","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","min","max","required","_c","$RefreshReg$"],"sources":["C:/John Bryce Programing/Passport To Paradise/Frontend/src/Components/AuthArea/Register/Register.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport \"./Register.css\";\nimport UserModel from \"../../../Models/UserModel\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyService\";\n\n/**\n * The `Register` component is responsible for rendering a registration form.\n * Users can enter their first name, last name, email, and password to register for an account.\n * Upon successful registration, users are redirected to the \"/vacations\" page.\n */\nfunction Register(): JSX.Element {\n    const { register, handleSubmit } = useForm<UserModel>();\n    const navigate = useNavigate();\n\n    async function send(user: UserModel) {\n        try {\n            await authService.register(user);\n            notifyService.success(\"You have been successfully registered.\");\n            navigate(\"/vacations\");\n        }\n        catch (err: any) {\n            notifyService.error(err);\n        }\n    }\n\n    return (\n        <div className=\"Register\">\n\n            <h2>Register</h2>\n\n            <form onSubmit={handleSubmit(send)}>\n\n                <label>First name: </label>\n                <input type=\"text\" {...register(\"firstName\")}\n                    min={2}\n                    max={30}\n                    required />\n\n                <label>Last name: </label>\n                <input type=\"text\" {...register(\"lastName\")}\n                    min={2}\n                    max={30}\n                    required />\n\n                <label>Email: </label>\n                <input type=\"email\" {...register(\"email\")}\n                    min={4}\n                    max={60}\n                    required />\n\n                <label>Password: </label>\n                <input type=\"password\" {...register(\"password\")}\n                    min={4}\n                    max={150}   //Intentionally the limit here on the number of characters is smaller than the limit of characters in the database because I take into account the hashing\n                    required />\n\n<button className=\"btn btn-primary\">Login</button>\n\n            </form>\n\n        </div>\n    );\n}\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}