{"ast":null,"code":"var _jsxFileName = \"C:\\\\John Bryce Programing\\\\Passport To Paradise\\\\Frontend\\\\src\\\\Components\\\\AuthArea\\\\Login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport \"./Login.css\";\n\n/**\n * Login component provides a form for users to log in.\n * It handles form submission, user authentication, and navigation to the vacation list upon successful login.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // Initialize the useForm hook for managing form state\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const navigate = useNavigate();\n\n  /**\n   * Handles form submission by sending user credentials for authentication.\n   * @param {CredentialsModel} credentials - The user's login credentials (email and password).\n   */\n  async function send(credentials) {\n    try {\n      // Attempt to log in the user using the provided credentials\n      await authService.login(credentials);\n      notifyService.success(\"You have been successfully logged-in.\");\n      // Redirect the user to the vacation list upon successful login\n      navigate(\"/vacations\");\n    } catch (err) {\n      notifyService.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        ...register(\"email\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"NBNaF86L+s24OCdlX7l2VwDp8PU=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","useNavigate","authService","notifyService","jsxDEV","_jsxDEV","Login","_s","register","handleSubmit","navigate","send","credentials","login","success","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","_c","$RefreshReg$"],"sources":["C:/John Bryce Programing/Passport To Paradise/Frontend/src/Components/AuthArea/Login/Login.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport CredentialsModel from \"../../../Models/CredentialsModel\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport \"./Login.css\";\n\n/**\n * Login component provides a form for users to log in.\n * It handles form submission, user authentication, and navigation to the vacation list upon successful login.\n */\nfunction Login(): JSX.Element {\n    // Initialize the useForm hook for managing form state\n    const { register, handleSubmit } = useForm<CredentialsModel>();\n    const navigate = useNavigate();\n\n    /**\n     * Handles form submission by sending user credentials for authentication.\n     * @param {CredentialsModel} credentials - The user's login credentials (email and password).\n     */\n    async function send(credentials: CredentialsModel): Promise<void> {\n        try {\n            // Attempt to log in the user using the provided credentials\n            await authService.login(credentials)\n            notifyService.success(\"You have been successfully logged-in.\");\n            // Redirect the user to the vacation list upon successful login\n            navigate(\"/vacations\");\n        }\n        catch (err: any) {\n            notifyService.error(err);\n        }\n    }\n\n    return (\n        <div className=\"Login\">\n\n            <h2>Login</h2>\n\n            <form onSubmit={handleSubmit(send)}>\n\n                <label>Email: </label>\n                <input type=\"email\" {...register(\"email\")}\n                    required />\n\n                <label>Password: </label>\n                <input type=\"password\" {...register(\"password\")}\n                    required />\n\n                <button className=\"btn btn-primary\">Login</button>\n\n            </form>\n        </div>\n    );\n}\nexport default Login;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAO,aAAa;;AAEpB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,KAAKA,CAAA,EAAgB;EAAAC,EAAA;EAC1B;EACA,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGT,OAAO,EAAoB;EAC9D,MAAMU,QAAQ,GAAGT,WAAW,EAAE;;EAE9B;AACJ;AACA;AACA;EACI,eAAeU,IAAIA,CAACC,WAA6B,EAAiB;IAC9D,IAAI;MACA;MACA,MAAMV,WAAW,CAACW,KAAK,CAACD,WAAW,CAAC;MACpCT,aAAa,CAACW,OAAO,CAAC,uCAAuC,CAAC;MAC9D;MACAJ,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CACD,OAAOK,GAAQ,EAAE;MACbZ,aAAa,CAACa,KAAK,CAACD,GAAG,CAAC;IAC5B;EACJ;EAEA,oBACIV,OAAA;IAAKY,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAElBb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAEdjB,OAAA;MAAMkB,QAAQ,EAAEd,YAAY,CAACE,IAAI,CAAE;MAAAO,QAAA,gBAE/Bb,OAAA;QAAAa,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACtBjB,OAAA;QAAOmB,IAAI,EAAC,OAAO;QAAA,GAAKhB,QAAQ,CAAC,OAAO,CAAC;QACrCiB,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAEfjB,OAAA;QAAAa,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACzBjB,OAAA;QAAOmB,IAAI,EAAC,UAAU;QAAA,GAAKhB,QAAQ,CAAC,UAAU,CAAC;QAC3CiB,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAEfjB,OAAA;QAAQY,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE/C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd;AAACf,EAAA,CA1CQD,KAAK;EAAA,QAEyBN,OAAO,EACzBC,WAAW;AAAA;AAAAyB,EAAA,GAHvBpB,KAAK;AA2Cd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}